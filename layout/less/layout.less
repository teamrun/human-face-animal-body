body{
    display: block;
    margin: 0;
    overflow: hidden;
}

.tst(@v: all 250ms ease;){
    -webkit-transition: @v;
    -ms-transition: @v;
    transition: @v;
}

.img-viewer-ctn{
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 200;

    &:after{
        content: 'Loading...';
        position: absolute;
        top: 0;
        bottom: 100%;
        left: 0;
        right: 0;
        font-size: 3em;
        color: #fff;
        line-height: 10em;
        text-align: center;
        z-index: 100;

        opacity: 0;
        background-color: lighten(#425E88, 30%);
        transition: opacity 200ms ease, bottom 0ms ease 200ms;
        // background-image: ;
    }

    &.loading{
        &:after{
            opacity: 1;
            bottom: 0;
            transition: opacity 200ms ease;
        }
        .img-viewer{
            z-index: 50;
        }
    }
    
    .img-viewer{
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        z-index: 500;
        cursor: move;
        opacity: 0.1;

        /*
         * tst对于操作来说很复杂啊
         * 首先, 拖拽的时候不能带有tst, 否则就会有duration长的延迟
         * ok, 我们把位移的tst去掉, 只留宽高的可以吧?
         * 也不可以, 只有宽高, 就会出现放大缩小时的颤抖: top/left先变化, 宽高缓动...
         * 所以还是在js里动态的调整吧
         */
        .tst(height 200ms ease, width 200ms ease;);
    }
}
